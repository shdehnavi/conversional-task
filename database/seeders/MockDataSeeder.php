<?php

namespace Database\Seeders;

use App\Models\Customer;
use App\Models\Session;
use App\Models\User;
use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;

class MockDataSeeder extends Seeder
{
    public function run(): void
    {
        DB::beginTransaction();

        try {
            $mockData = json_decode(file_get_contents(database_path('seeders/data/mock.json')), true);

            foreach ($mockData as $data) {
                $customer = new Customer;
                $customer->id = $data['customer_id'];
                $customer->name = $data['customer_name'];
                $customer->save();

                foreach ($data['users'] as $jsonUser) {
                    $user = new User;
                    $user->id = $jsonUser['user_id'];
                    $user->customer_id = $data['customer_id'];
                    $user->email = $jsonUser['email'];
                    $user->created_at = $jsonUser['created'];
                    $user->save();

                    foreach ($jsonUser['sessions'] as $jsonSession) {
                        $session = new Session;
                        $session->user_id = $jsonUser['user_id'];
                        $session->activated_at = $jsonSession['activated'];
                        $session->appointment_at = $jsonSession['appointment'];
                        $session->save();
                    }
                }
            }

            // Refine pgsql sequences, because we use mock IDs, and they are not generated by DB
            $customerMaxId = User::max('id');
            DB::statement("SELECT setval(pg_get_serial_sequence('customers', 'id'), ?, false)", [$customerMaxId]);

            $userMaxId = User::max('id');
            DB::statement("SELECT setval(pg_get_serial_sequence('users', 'id'), ?, false)", [$userMaxId]);

            DB::commit();
        } catch (\Exception $e) {
            DB::rollBack();

            throw $e;
        }
    }
}
